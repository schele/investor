@using Investor.Helpers
@using Investor.Models.Extensions
@using Investor.Models.PageModels
@using MediaExtensions = Investor.Models.Extensions.MediaExtensions

@inherits UmbracoViewPage<ArticlePageModel>

@{
    var relatedDocuments = Umbraco.Field("relateradeDokument").ToString();
    Layout = "Master.cshtml";
}

<div class="row">
    @Html.Partial("~/Views/Partials/SubNavigation.cshtml")

    <article class="article-page col-md-9">
        <div class="row">
            <div class="article-page-content col-md-9">
                @Html.Render(Model.Header, @<h2 class="article-page-header">@Model.Header</h2>)
                @Html.Render(Model.Preamble, @<p class="article-page-premable">@Model.Preamble</p>)

                @if (Umbraco.Field("broedtext") != null)
                {
                    <div class="article-page-body">
                        @Html.Raw(Umbraco.Field("broedtext"))
                    </div>
                }
            </div>
            <div class="col-md-3">

            @if (Model.RelatedLinks != null)
            {
                <div class="article-page-links">
                    <h3>
                        <span class="icon"></span>@Model.RelatedLinksHeader
                    </h3>
                    <ul>
                        @foreach (var link in Model.RelatedLinks)
                        {
                            var target = link.NewWindow ? "_blank" : null;

                            <li><a href="@link.Link" target="@target" title="@link.Caption">@link.Caption</a></li>
                        }
                    </ul>
                </div>
            }

            @if (!string.IsNullOrEmpty(relatedDocuments))
            {
                <div class="article-page-documents">
                    <h3>
                        <span class="icon"></span>@Model.RelatedDocumentsHeader
                    </h3>
                    <ul>
                        @{
                        foreach (var d in relatedDocuments.Split(','))
                        {
                            var document = MediaExtensions.GetMediaById(d);

                            <li><a href="@document.FriendlyUrl()" title="@document.Name">@document.Name</a></li>
                        }
                        }
                    </ul>
                </div>
            }
            </div>
        </div>
    </article>
</div>