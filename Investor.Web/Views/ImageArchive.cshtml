@using Investor.Extensions
@using Investor.Helpers
@using Investor.Models.PageModels

@inherits UmbracoViewPage<ImageArchivePageModel>

@{
	Layout = "Master.cshtml";
    
    var umbracoHelper = new UmbracoHelper(UmbracoContext.Current);
}

<div class="row">
    @Html.Partial("~/Views/Partials/SubNavigation.cshtml")
    <article class="col-md-7 image-archive-page">
        <h1>@Model.Name</h1>
        <ul class="row">
            @foreach (var gallery in Model.Children<ImageArchivePageModel>())
            {
                if (gallery.Images.ToList()[0] != null)
                {
                    if (gallery.Images.Count() == 1)
                    {
                        var umbracoBytes = umbracoHelper.TypedMedia(gallery.Images.ToList().First().Id).GetSize();

                        <li class="col-md-4">
                            <a href="@gallery.Images.ToList().First().Url" title="@gallery.Images.ToList().First().Name">
                                <img src="@gallery.Images.ToList().First().Url" alt="@gallery.Images.ToList().First().Name" />

                                @MiscHelpers.BytesToKiloBytes(int.Parse(umbracoBytes)) kb
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="col-md-4">
                            <a href="@gallery.Url" title="@gallery.Name">
                                @if (gallery.PushImage.Url != null)
                                {
                                    <img src="@gallery.PushImage.Url" alt="@gallery.Name" />
                                }

                                <span>@gallery.Name</span>
                                <span>@gallery.Images.WhereNotNull().Count() @Umbraco.GetDictionaryValue("System.Media.Images")</span>
                            </a>
                        </li>
                    }
                }
            }

            @if (!Model.Children().Any())
            {
                foreach (var image in Model.Images)
                {

                    if (image != null)
                    {
                        var umbracoBytes = image.GetSize();

                        <li class="col-md-4">
                            <a href="@image.Url" title="@image.Name">
                                @if (image.Url != null)
                                {
                                    <img src="@image.Url" alt="@image.Name" />
                                }

                                <span>@image.GetProperty("name").Value</span>
                                <span>@MiscHelpers.BytesToKiloBytes(int.Parse(umbracoBytes)) kb</span>
                            </a>
                        </li>
                    }
                }
            }
        </ul>           
    </article>
</div>