@using Investor.Abstraction.Pressreleases
@using Investor.Models.PageModels
@using StructureMap

@inherits UmbracoViewPage<IFramePageModel>

@{
    Layout = "Master.cshtml";
    
    var id = string.Empty;
    var pressReleaseRepository = ObjectFactory.GetInstance<IPressReleaseRepository>();
    var title = string.Empty;
    var body = string.Empty;
    var date = string.Empty;
    var time = string.Empty;
    
    if (!string.IsNullOrEmpty(Request.QueryString["id"]))
    {
        id = Request.QueryString["id"];

        var pressRelease = pressReleaseRepository.GetPressRelease(id);
        title = pressRelease.Headline;
        body = pressRelease.Body;
        date = pressRelease.Published.ToString(Umbraco.GetDictionaryValue("DateFormat"));
        time = pressRelease.Published.ToString(Umbraco.GetDictionaryValue("TimeFormat"));
    }

    
}

<div class="row">
    @Html.Partial("~/Views/Partials/SubNavigation.cshtml")

 
        <article class="col-md-7 iframe-page">
            @if (!string.IsNullOrWhiteSpace(id))
            {                
                <div>
                    <h1>@title</h1>
                    <p>@date @time</p>
                    @Html.Raw(body)                    
                </div>
            }
            else
            {
                <iframe onload="iframeLoaded()" id="iframe-page-iframe" scrolling="no" src="@Model.IFrameSrc"></iframe>
            }

        </article>
 
</div>