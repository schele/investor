@using Investor.Helpers
@using Investor.Models.Extensions
@using Investor.Models.PageModels
@using Investor.Models.PageModels.Interfaces
@using log4net
@using UCodeFirst.Factories

@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@inherits UmbracoViewPage<CategoryPageModel>

@{
    Layout = "Master.cshtml";
    
    var log = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
}

<div class="category-page">
    <div class="row">
        <div class="category-page-intro col-md-12">
            <h1>@Model.Header</h1>
            <p>@Model.Preamble</p>
        </div>
    </div>

    <div class="row">
        @foreach (var page in Model.Children().OrderBy(x => x.CreateDate))
        {
            var push = page as IPush;
            string color = null;
            
            if (page.DocumentTypeAlias == "ListInvestmentsPageModel")
            {
                var categoryPage = ModelFactory.Instance.GetModel<ListInvestmentsPageModel>(page.Id);
                color = categoryPage.ColorDropdown;
            }
            
            if (push != null)
            {
                try
                {
                    <div class="category-page-category col-md-4 col-sm-4">

                        @Html.Render(push.PushImage, @<p><img src="@push.PushImage.Url" alt="@page.Name"/></p>)

                        <h2>
                            <a href="@page.Url" title="@page.Name" class="@color">@page.Name</a>
                        </h2>

                        <p>@push.PushText</p>

                        @if (push.RelatedLinksForPush.Any())
                        {
                            <span>@push.RelatedLinksForPushHeader</span>
                            <ul>
                                @foreach (var link in push.RelatedLinksForPush)
                                {
                                    <li>@Html.RelatedLink(link)</li>
                                }
                            </ul>
                        }
                    </div>
                }
                catch (Exception exception)
                {
                    log.Error(exception.Message);
                }
            }
        }
    </div>
</div>