@using Investor.Models.PageModels

@inherits UmbracoViewPage<BaseModel>

@helper RenderMenu(BaseModel parent, bool recursive = true, bool renderSelf = false, int? maxLevel = null)
{
    if (renderSelf)
    {
        <li>
            <a href="@parent.Url">@parent.Name</a>

            <ul class="sub-navigation-first-level">
                @RenderMenu(parent, recursive, false, maxLevel)
            </ul>
        </li>

    return;
}

foreach (var childPage in parent.Children<BaseModel>().Where(x => x.HideInNavigation == false).OrderBy(x => x.SortOrder))
{
    if (!Umbraco.MemberHasAccess(childPage.Id, childPage.Path))
    {
        continue;
    }

    string activeClass = null;
    string hasChildrenClass = null;
    var children = childPage.Children<BaseModel>().Where(x => !x.HideInNavigation).ToList();
    var noChildren = !children.Any() || maxLevel.HasValue && maxLevel <= 1 && children.First().Level >= maxLevel;
    if (childPage.Id == Model.Id)
    {
        activeClass = "sub-navigation-active";
    }
    if (!noChildren)
    {
        hasChildrenClass = " has-children";
    }

        <li class="@activeClass @hasChildrenClass">
            <a href="@childPage.Url">@childPage.Name</a>
            @if (activeClass == "sub-navigation-active")
            {
                <span class="arrow"></span>
            }
            @if (recursive)
            {                
                if (noChildren)
                {
                    continue;
                    
                }
      
                <ul>
                    @RenderMenu(childPage)
                </ul>
            }
        </li>        
    }
}

<div class="col-md-3 sub-navigation">
    <button class="sub-navigation-mobile-btn">Sub navigation</button>
    <ul class="sub-navigation-nav">
        @RenderMenu(Model.AncestorOrSelf<BaseModel>(2))
    </ul>
</div>